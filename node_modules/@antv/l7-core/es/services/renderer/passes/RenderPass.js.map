{"version":3,"sources":["../../../../src/services/renderer/passes/RenderPass.ts"],"names":["injectable","PassType","BaseNormalPass","RenderPass","Normal","layer","config","rendererService","useFramebuffer","clear","readFBO","multiPassRenderer","getPostProcessor","getReadFBO","color","depth","stencil","framebuffer","setRenderFlag","render"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,WAA3B;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;IAMqBC,U,WADpBH,UAAU,E;;;;;;;;;;;;;8BAIQ;AACf,aAAOC,QAAQ,CAACG,MAAhB;AACD;;;8BAEgB;AACf,aAAO,QAAP;AACD;;;yBAEWC,K,EAAeC,M,EAAyC;AAClE,2EAAWD,KAAX,EAAkBC,MAAlB;AACD;;;2BAEaD,K,EAAe;AAAA,kCACO,KAAKE,eADZ;AAAA,UACnBC,cADmB,yBACnBA,cADmB;AAAA,UACHC,KADG,yBACHA,KADG;AAE3B,UAAMC,OAAO,GAAGL,KAAK,CAACM,iBAAN,CAAwBC,gBAAxB,GAA2CC,UAA3C,EAAhB;AACAL,MAAAA,cAAc,CAACE,OAAD,EAAU,YAAM;AAC5BD,QAAAA,KAAK,CAAC;AACJK,UAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADH;AAEJC,UAAAA,KAAK,EAAE,CAFH;AAGJC,UAAAA,OAAO,EAAE,CAHL;AAIJC,UAAAA,WAAW,EAAEP;AAJT,SAAD,CAAL;AAQAL,QAAAA,KAAK,CAACM,iBAAN,CAAwBO,aAAxB,CAAsC,KAAtC;AACAb,QAAAA,KAAK,CAACc,MAAN;AACAd,QAAAA,KAAK,CAACM,iBAAN,CAAwBO,aAAxB,CAAsC,IAAtC;AACD,OAZa,CAAd;AAaD;;;;EA7BOhB,c;SAFWC,U","sourcesContent":["import { injectable } from 'inversify';\nimport { ILayer } from '../../layer/ILayerService';\nimport { PassType } from '../IMultiPassRenderer';\nimport BaseNormalPass from './BaseNormalPass';\n\n/**\n * RenderPass，负责输出到后续 PostProcessor 的 readFBO 中\n */\n@injectable()\nexport default class RenderPass<\n  InitializationOptions = {}\n> extends BaseNormalPass<InitializationOptions> {\n  public getType() {\n    return PassType.Normal;\n  }\n\n  public getName() {\n    return 'render';\n  }\n\n  public init(layer: ILayer, config?: Partial<InitializationOptions>) {\n    super.init(layer, config);\n  }\n\n  public render(layer: ILayer) {\n    const { useFramebuffer, clear } = this.rendererService;\n    const readFBO = layer.multiPassRenderer.getPostProcessor().getReadFBO();\n    useFramebuffer(readFBO, () => {\n      clear({\n        color: [0, 0, 0, 0],\n        depth: 1,\n        stencil: 0,\n        framebuffer: readFBO,\n      });\n\n      // render to post processor\n      layer.multiPassRenderer.setRenderFlag(false);\n      layer.render();\n      layer.multiPassRenderer.setRenderFlag(true);\n    });\n  }\n}\n"],"file":"RenderPass.js"}