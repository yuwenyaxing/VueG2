{"version":3,"sources":["../../src/layer/drillDown.ts"],"names":["mergeCustomizer","objValue","srcValue","Array","isArray","DrillDownLayer","scene","option","options","cityLayer","countyLayer","provinceLayer","drillState","layers","getDefaultOption","CountryLayer","getLayerOption","ProvinceLayer","CityLayer","setMapStatus","doubleClickZoom","customTrigger","on","addCountryEvent","push","addProvinceEvent","addCityEvent","drillDepth","drillDownTriggerEvent","drillUpTriggerEvent","provinceData","cityData","countyData","city","adcode","county","fillLayer","e","hide","drillDown","feature","properties","drillUp","forEach","layer","show","destroy","newData","joinByField","updateDistrict","fitBounds","code","substr","showProvinceView","showCityView","updateData","type","joinBy","label","bubble","fill","popup","geoDataLevel","datatype","data"],"mappings":"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","sourcesContent":["import { Scene } from '@antv/l7';\n// tslint:disable-next-line: no-submodule-imports\nimport mergeWith from 'lodash/mergeWith';\nimport CityLayer from './city';\nimport CountryLayer from './country';\nimport { adcodeType, IDrillDownOption } from './interface';\nimport ProvinceLayer from './province';\nfunction mergeCustomizer(objValue: any, srcValue: any) {\n  if (Array.isArray(srcValue)) {\n    return srcValue;\n  }\n}\nexport default class DrillDownLayer {\n  private options: Partial<IDrillDownOption>;\n  private cityLayer: ProvinceLayer;\n  private countyLayer: CityLayer;\n  private provinceLayer: CountryLayer;\n  private scene: Scene;\n  private drillState: 0 | 1 | 2 = 0;\n  private layers: any = [];\n  constructor(scene: Scene, option: Partial<IDrillDownOption>) {\n    this.options = mergeWith(this.getDefaultOption(), option, mergeCustomizer);\n    this.scene = scene;\n    this.provinceLayer = new CountryLayer(\n      scene,\n      this.getLayerOption('province'),\n    );\n    this.cityLayer = new ProvinceLayer(scene, this.getLayerOption('city'));\n    this.countyLayer = new CityLayer(scene, this.getLayerOption('county'));\n    this.scene.setMapStatus({ doubleClickZoom: false });\n    if (!this.options.customTrigger) {\n      this.provinceLayer.on('loaded', () => {\n        this.addCountryEvent();\n        this.layers.push(this.provinceLayer);\n      });\n      this.cityLayer.on('loaded', () => {\n        this.addProvinceEvent();\n        this.layers.push(this.cityLayer);\n      });\n      this.countyLayer.on('loaded', () => {\n        this.addCityEvent();\n        this.layers.push(this.cityLayer);\n      });\n    }\n  }\n  public getDefaultOption() {\n    return {\n      drillDepth: 2,\n      customTrigger: false,\n      drillDownTriggerEvent: 'click',\n      drillUpTriggerEvent: 'undblclick',\n      provinceData: [],\n      cityData: [],\n      countyData: [],\n      city: {\n        adcode: [],\n      },\n      county: {\n        adcode: [],\n      },\n    };\n  }\n  public addCountryEvent() {\n    const { drillDownTriggerEvent } = this.options;\n    // 省级下钻到市\n    this.provinceLayer.fillLayer.on(\n      drillDownTriggerEvent as string,\n      (e: any) => {\n        this.provinceLayer.hide();\n        this.drillDown(e.feature.properties.adcode);\n      },\n    );\n  }\n\n  public addProvinceEvent() {\n    const { drillDownTriggerEvent, drillUpTriggerEvent } = this.options;\n    this.cityLayer.fillLayer.on(drillUpTriggerEvent as string, () => {\n      this.drillUp();\n    });\n    this.cityLayer.fillLayer.on(drillDownTriggerEvent as string, (e: any) => {\n      this.drillDown(e.feature.properties.adcode);\n    });\n  }\n\n  public addCityEvent() {\n    const { drillDownTriggerEvent, drillUpTriggerEvent } = this.options;\n    this.countyLayer.fillLayer.on(drillUpTriggerEvent as string, () => {\n      this.drillUp();\n    });\n  }\n\n  public show() {\n    this.layers.forEach((layer: any) => layer.show());\n  }\n\n  public hide() {\n    this.layers.forEach((layer: any) => layer.hide());\n  }\n\n  public destroy() {\n    this.layers.forEach((layer: any) => layer.destroy());\n  }\n\n  public showProvinceView(\n    adcode: adcodeType,\n    newData?: Array<{ [key: string]: any }>,\n    joinByField?: [string, string],\n  ) {\n    this.cityLayer.show();\n    this.cityLayer.updateDistrict(adcode, newData, joinByField);\n    this.cityLayer.fillLayer.fitBounds();\n    this.countyLayer.hide();\n    this.drillState = 1;\n  }\n  public showCityView(\n    code: adcodeType,\n    newData?: Array<{ [key: string]: any }>,\n    joinByField?: [string, string],\n  ) {\n    this.countyLayer.show();\n    let adcode = `${code}`;\n    if (adcode.substr(2, 2) === '00') {\n      adcode = adcode.substr(0, 2) + '0100';\n    }\n    // 更新县级行政区划\n    this.countyLayer.updateDistrict(adcode, newData, joinByField);\n    this.countyLayer.fillLayer.fitBounds();\n    this.cityLayer.hide();\n    this.drillState = 2;\n  }\n\n  /**\n   * 向上\n   */\n  public drillUp() {\n    switch (this.drillState) {\n      case 2:\n        this.cityLayer.show();\n        this.cityLayer.fillLayer.fitBounds();\n        this.countyLayer.hide();\n        this.drillState = 1;\n        break;\n      case 1:\n        this.provinceLayer.show();\n        this.provinceLayer.fillLayer.fitBounds();\n        this.cityLayer.hide();\n        this.drillState = 0;\n        break;\n    }\n  }\n  public drillDown(\n    adcode: adcodeType,\n    newData?: Array<{ [key: string]: any }>,\n    joinByField?: [string, string],\n  ) {\n    const { drillDepth } = this.options;\n    if (this.drillState === drillDepth) {\n      return;\n    }\n    switch (this.drillState) {\n      case 0:\n        this.showProvinceView(adcode, newData, joinByField);\n        break;\n      case 1:\n        this.showCityView(adcode, newData, joinByField);\n        break;\n    }\n  }\n\n  public updateData(\n    layer: 'province' | 'city' | 'county',\n    newData: Array<{ [key: string]: any }>,\n    joinByField?: [string, string],\n  ) {\n    switch (layer) {\n      case 'province':\n        this.provinceLayer.updateData(newData, joinByField);\n        break;\n      case 'city':\n        this.cityLayer.updateData(newData, joinByField);\n        break;\n      case 'county':\n        this.countyLayer.updateData(newData, joinByField);\n    }\n  }\n\n  private getLayerOption(type: 'province' | 'city' | 'county') {\n    const { joinBy, label, bubble, fill, popup, geoDataLevel } = this.options;\n    const datatype = (type + 'Data') as\n      | 'provinceData'\n      | 'cityData'\n      | 'countyData';\n    return {\n      data: this.options[datatype],\n      joinBy,\n      label,\n      bubble,\n      fill,\n      popup,\n      geoDataLevel,\n      ...this.options[type],\n    };\n  }\n}\n"],"file":"drillDown.js"}