{"version":3,"sources":["../../src/layer/county.ts"],"names":["merge","ProvinceLayer","CityLayer","config","adcode","depth","data","adcodeArray","Array","isArray","features","filter","fe","code","properties","indexOf","type"],"mappings":";;;;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,cAAlB;AAEA,OAAOC,aAAP,MAA0B,YAA1B;;IAKqBC,S;;;;;;;;;;;;;uCACgC;AACjD,UAAMC,MAAM,kFAAZ;;AACA,aAAOH,KAAK,CAAC,EAAD,EAAKG,MAAL,EAAa;AACvBC,QAAAA,MAAM,EAAE,CAAC,QAAD,CADe;AAEvBC,QAAAA,KAAK,EAAE;AAFgB,OAAb,CAAZ;AAID;;;+BACoBC,I,EAAWF,M,EAAoB;AAClD,UAAMG,WAAW,GAAGC,KAAK,CAACC,OAAN,CAAcL,MAAd,IAAwBA,MAAxB,GAAiC,CAACA,MAAD,CAArD;AACA,UAAMM,QAAQ,GAAGJ,IAAI,CAACI,QAAL,CAAcC,MAAd,CAAqB,UAACC,EAAD,EAAa;AACjD,YAAMC,IAAI,GAAGD,EAAE,CAACE,UAAH,CAAcV,MAA3B;AACA,eACEG,WAAW,CAACQ,OAAZ,CAAoBF,IAApB,MAA8B,CAAC,CAA/B,IACAN,WAAW,CAACQ,OAAZ,CAAoB,KAAKF,IAAzB,MAAmC,CAAC,CAFtC;AAID,OANgB,CAAjB;AAOA,aAAO;AAAEG,QAAAA,IAAI,EAAE,mBAAR;AAA6BN,QAAAA,QAAQ,EAARA;AAA7B,OAAP;AACD;;;oCAEyBJ,I,EAAWF,M,EAAoB;AACvD,UAAMG,WAAW,GAAGC,KAAK,CAACC,OAAN,CAAcL,MAAd,IAAwBA,MAAxB,GAAiC,CAACA,MAAD,CAArD;AACA,UAAMM,QAAQ,GAAGJ,IAAI,CAACK,MAAL,CAAY,UAACC,EAAD,EAAa;AACxC,YAAMC,IAAI,GAAGD,EAAE,CAACR,MAAhB;AACA,eACEG,WAAW,CAACQ,OAAZ,CAAoBF,IAApB,MAA8B,CAAC,CAA/B,IACAN,WAAW,CAACQ,OAAZ,CAAoB,KAAKF,IAAzB,MAAmC,CAAC,CAFtC;AAID,OANgB,CAAjB;AAOA,aAAOH,QAAP;AACD;;;;EA9BoCT,a;;SAAlBC,S","sourcesContent":["import { Scene } from '@antv/l7';\n// tslint:disable-next-line: no-submodule-imports\nimport merge from 'lodash/merge';\nimport { adcodeType, IDistrictLayerOption } from './interface';\nimport ProvinceLayer from './province';\n\nexport interface IProvinceLayerOption extends IDistrictLayerOption {\n  adcode: adcodeType;\n}\nexport default class CityLayer extends ProvinceLayer {\n  protected getDefaultOption(): IProvinceLayerOption {\n    const config = super.getDefaultOption();\n    return merge({}, config, {\n      adcode: ['110100'],\n      depth: 3,\n    });\n  }\n  protected filterData(data: any, adcode: adcodeType) {\n    const adcodeArray = Array.isArray(adcode) ? adcode : [adcode];\n    const features = data.features.filter((fe: any) => {\n      const code = fe.properties.adcode;\n      return (\n        adcodeArray.indexOf(code) !== -1 ||\n        adcodeArray.indexOf('' + code) !== -1\n      );\n    });\n    return { type: 'FeatureCollection', features };\n  }\n\n  protected filterLabelData(data: any, adcode: adcodeType) {\n    const adcodeArray = Array.isArray(adcode) ? adcode : [adcode];\n    const features = data.filter((fe: any) => {\n      const code = fe.adcode;\n      return (\n        adcodeArray.indexOf(code) !== -1 ||\n        adcodeArray.indexOf('' + code) !== -1\n      );\n    });\n    return features;\n  }\n}\n"],"file":"county.js"}